#!/usr/bin/env python3
"""
–¢–µ—Å—Ç PvP API –¥–ª—è –∏–≥—Ä—ã 21
"""

import requests
import json
import time

# URL API
BASE_URL = "http://localhost:8000"

def test_pvp_api():
    print("üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PvP API –¥–ª—è –∏–≥—Ä—ã 21")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    player1 = {
        "id": "test_player_1",
        "name": "–¢–µ—Å—Ç –ò–≥—Ä–æ–∫ 1",
        "tokens": 1000
    }
    
    player2 = {
        "id": "test_player_2", 
        "name": "–¢–µ—Å—Ç –ò–≥—Ä–æ–∫ 2",
        "tokens": 1000
    }
    
    # 1. –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
    print("1. –°–æ–∑–¥–∞–µ–º PvP –∏–≥—Ä—É...")
    create_response = requests.post(f"{BASE_URL}/api/pvp/create_game", json={
        "player_id": player1["id"],
        "player_name": player1["name"],
        "bet_amount": 50
    })
    
    if create_response.status_code == 200:
        create_data = create_response.json()
        if create_data["success"]:
            game = create_data["game"]
            game_id = game["id"]
            print(f"‚úÖ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞: {game_id}")
            print(f"   –ò–≥—Ä–æ–∫: {game['player1']['name']}")
            print(f"   –°—Ç–∞–≤–∫–∞: {game['player1']['bet']} $ANON")
            print(f"   –°—Ç–∞—Ç—É—Å: {game['state']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: {create_data['error']}")
            return
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {create_response.status_code}")
        return
    
    # 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä
    print("\n2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä...")
    games_response = requests.post(f"{BASE_URL}/api/pvp/get_games", json={
        "player_id": player2["id"]
    })
    
    if games_response.status_code == 200:
        games_data = games_response.json()
        if games_data["success"]:
            games = games_data["games"]
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä: {len(games)}")
            for game in games:
                print(f"   - {game['player1_name']} (—Å—Ç–∞–≤–∫–∞: {game['bet']} $ANON)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä: {games_data['error']}")
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {games_response.status_code}")
    
    # 3. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ –∏–≥—Ä–µ
    print(f"\n3. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ –∏–≥—Ä–µ {game_id}...")
    join_response = requests.post(f"{BASE_URL}/api/pvp/join_game", json={
        "game_id": game_id,
        "player_id": player2["id"],
        "player_name": player2["name"]
    })
    
    if join_response.status_code == 200:
        join_data = join_response.json()
        if join_data["success"]:
            game = join_data["game"]
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!")
            print(f"   –ò–≥—Ä–æ–∫ 1: {game['player1']['name']} (–∫–∞—Ä—Ç: {len(game['player1']['hand'])})")
            print(f"   –ò–≥—Ä–æ–∫ 2: {game['player2']['name']} (–∫–∞—Ä—Ç: {len(game['player2']['hand'])})")
            print(f"   –°—Ç–∞—Ç—É—Å: {game['state']}")
            print(f"   –¢–µ–∫—É—â–∏–π —Ö–æ–¥: {game['current_turn']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {join_data['error']}")
            return
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {join_response.status_code}")
        return
    
    # 4. –î–µ–ª–∞–µ–º —Ö–æ–¥—ã
    print("\n4. –î–µ–ª–∞–µ–º —Ö–æ–¥—ã...")
    
    # –•–æ–¥ –∏–≥—Ä–æ–∫–∞ 2 (hit)
    print("   –ò–≥—Ä–æ–∫ 2 –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—É...")
    move1_response = requests.post(f"{BASE_URL}/api/pvp/make_move", json={
        "game_id": game_id,
        "player_id": player2["id"],
        "action": "hit"
    })
    
    if move1_response.status_code == 200:
        move1_data = move1_response.json()
        if move1_data["success"]:
            game = move1_data["game"]
            player2_value = sum([11 if card["value"] == "A" else 10 if card["value"] in ["K", "Q", "J"] else int(card["value"]) for card in game["player2"]["hand"]])
            print(f"   ‚úÖ –ò–≥—Ä–æ–∫ 2: {player2_value} –æ—á–∫–æ–≤")
            print(f"   –¢–µ–∫—É—â–∏–π —Ö–æ–¥: {game['current_turn']}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞: {move1_data['error']}")
    
    # –•–æ–¥ –∏–≥—Ä–æ–∫–∞ 1 (hit)
    print("   –ò–≥—Ä–æ–∫ 1 –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—É...")
    move2_response = requests.post(f"{BASE_URL}/api/pvp/make_move", json={
        "game_id": game_id,
        "player_id": player1["id"],
        "action": "hit"
    })
    
    if move2_response.status_code == 200:
        move2_data = move2_response.json()
        if move2_data["success"]:
            game = move2_data["game"]
            player1_value = sum([11 if card["value"] == "A" else 10 if card["value"] in ["K", "Q", "J"] else int(card["value"]) for card in game["player1"]["hand"]])
            print(f"   ‚úÖ –ò–≥—Ä–æ–∫ 1: {player1_value} –æ—á–∫–æ–≤")
            print(f"   –¢–µ–∫—É—â–∏–π —Ö–æ–¥: {game['current_turn']}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞: {move2_data['error']}")
    
    # 5. –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    print("\n5. –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã...")
    final_response = requests.post(f"{BASE_URL}/api/pvp/get_game", json={
        "game_id": game_id,
        "player_id": player1["id"]
    })
    
    if final_response.status_code == 200:
        final_data = final_response.json()
        if final_data["success"]:
            game = final_data["game"]
            print(f"‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
            print(f"   –°—Ç–∞—Ç—É—Å: {game['state']}")
            if game['state'] == 'finished':
                print(f"   –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {game.get('winner', '–ù–∏—á—å—è')}")
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {game.get('result', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä—ã: {final_data['error']}")
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {final_response.status_code}")
    
    print("\nüéÆ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    try:
        test_pvp_api()
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}") 