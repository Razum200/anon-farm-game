#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è PvP API
"""

from http.server import HTTPServer, BaseHTTPRequestHandler
import json
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ API
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à API
from api.index import *

class TestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤"""
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-Type', 'text/html')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(b'<h1>PvP API Test Server</h1><p>Server is running!</p>')
        else:
            self.send_response(404)
            self.end_headers()
    
    def do_POST(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤ - –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –∫ –Ω–∞—à–µ–º—É API"""
        try:
            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞—à–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            handler = handler()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å
            handler.path = self.path
            
            # –ö–æ–ø–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            for header, value in self.headers.items():
                handler.headers[header] = value
            
            # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
            content_length = int(self.headers.get('Content-Length', 0))
            if content_length > 0:
                handler.rfile = self.rfile
            
            # –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            handler.do_POST()
            
            # –ö–æ–ø–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            self.send_response(handler.response_code if hasattr(handler, 'response_code') else 200)
            for header, value in handler.response_headers if hasattr(handler, 'response_headers') else []:
                self.send_header(header, value)
            self.end_headers()
            
            if hasattr(handler, 'response_body'):
                self.wfile.write(handler.response_body)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            self.send_response(500)
            self.send_header('Content-Type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps({'error': str(e)}).encode())
    
    def do_OPTIONS(self):
        """CORS –æ–±—Ä–∞–±–æ—Ç–∫–∞"""
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, DELETE, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()

def run_test_server():
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"""
    server_address = ('', 8000)
    httpd = HTTPServer(server_address, TestHandler)
    print("üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    print("üìù –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    httpd.serve_forever()

if __name__ == '__main__':
    run_test_server() 